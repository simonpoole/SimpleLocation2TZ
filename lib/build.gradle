/*
 * 
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

version = '0.0.1'

ext {
     mainSource = file('src/main/java/ch/poole/misc/simplelocation2tz')
     testSource = file('src/test/java/ch/poole/misc/simplelocation2tz')
    mapboxVersion = "5.8.0"
}

dependencies {
    
    implementation "com.mapbox.mapboxsdk:mapbox-sdk-geojson:$mapboxVersion"
    implementation "com.mapbox.mapboxsdk:mapbox-sdk-turf:$mapboxVersion"
    compileOnly 'org.jetbrains:annotations:15.0'
    
    testCompileOnly 'org.jetbrains:annotations:15.0'
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from mainSource, testSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    //	options.encoding = 'UTF-8'
}

ext {
    repoUrl = 'https://github.com/simonpoole/SimpleLocation2Tz.git'
    spdxId = 'Apache-2.0'
}

publishing {
    publications {
        Release(MavenPublication) {
            from components.java
            groupId 'ch.poole.misc'
            artifactId 'SimpleLocation2Tz'
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = artifactId
                description = 'Location to timezone'
                url = 'https://github.com/simonpoole/SimpleLocation2Tz'
                scm {
                    url = repoUrl
                }
                licenses {
                    license {
                        name = spdxId
                        url = 'https://raw.githubusercontent.com/simonpoole/SimpleLocation2Tz/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'Simon Poole'
                    }
                }
            }
            repositories {
                maven {
                    name = 'sonatype'
                    credentials {
                        username System.getenv('SONATYPE_USER')
                        password System.getenv('SONATYPE_PASSWORD')
                    }
                    def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}


signing {
    sign publishing.publications.Release
}
